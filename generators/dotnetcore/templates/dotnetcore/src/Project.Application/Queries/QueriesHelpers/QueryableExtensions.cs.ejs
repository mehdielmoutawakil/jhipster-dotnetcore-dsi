// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this

using System.Linq.Expressions;
using System.Linq;
using System;

namespace <%= namespace %>.Application.Queries
{

    public static class QueryableExtensions
    {
        public static IQueryable<T> OrderByDynamic<T>(this IQueryable<T> source, string propertyName, bool ascending)
        {
            var parameter = Expression.Parameter(typeof(T), "e");
            var property = Expression.Property(parameter, propertyName);
            var keySelector = Expression.Lambda(property, parameter);

            var method = ascending ? "OrderBy" : "OrderByDescending";
            var resultExpression = Expression.Call(
                typeof(Queryable),
                method,
                new Type[] { typeof(T), property.Type },
                source.Expression,
                keySelector
            );

            return source.Provider.CreateQuery<T>(resultExpression);
        }
    }
}
